[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
]

[project]
authors = [
    {email = "arc.collaborations@ucl.ac.uk", name = "UCL Advanced Research Computing Centre Collaborations team"},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
dependencies = [
    "dxh@git+https://github.com/UCL/dxh",
    "fenics-dolfinx>=0.6",
    "fenics-ufl",
    "gmsh",
    "h5py",
    "matplotlib",
    "meshio",
    "mpi4py",
    "numpy",
    "packaging",
    "petsc4py",
    "scipy",
    "sympy",
]
description = "DOLFINx solvers on space-time finite element spaces"
dynamic = [
    "version",
]
keywords = [
]
name = "dxss"
readme = "README.md"
requires-python = ">=3.9"
license.file = "LICENSE.md"

[project.optional-dependencies]
dev = [
    "black",
    "build",
    "mypy",
    "pre-commit",
    "pydata-sphinx-theme",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "ruff",
    "sphinx<7",
    "sphinx_autodoc_typehints",
    "tox",
    "twine",
]
pypardiso = ["pypardiso"]

[project.urls]
homepage = "https://github.com/UCL/dxss"

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, relative_files = true, source = [
    "dxss",
]}
paths.source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
explicit_package_bases = true
plugins = [
    "numpy.typing.mypy_plugin",
    "pydantic.mypy",
]

[tool.pytest.ini_options]
addopts = "--color=yes -v"
testpaths = [
    "tests",
]

[tool.ruff]
fix = true
force-exclude = true
ignore = [
    "ANN", # temporarily ignore flake8 annotation warnings (missing type hints is fine for now)
    "D10", # _temporarily_ ignore **all** missing doc warnings (TODO: revert this once #15 is fixed)
    "D203", # no-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D417", # argument description in docstring (unreliable)
    "E501", # line too long (handled by black)
    "FBT00", # bool values in function calls or positional arguments (TODO: these can be solved by better design)
    "FIX002", # TODOs are fine
    "PLR2004", # magic values in comparisons
    "RET505", # superfluous else return,
    "T201", # print
    "TD002",
    "TD003", # TODOs are fine
    "UP007", # X | Y for type annotations (Python 3.10+ only)
]
per-file-ignores = {"conf.py" = ["INP001"], "test_*" = [
    "D103",
    "INP001",
    "S101",
]}
select = [
    "ALL",
    "I001",
    "I002",
]
target-version = "py39"
isort.known-first-party = [
    "dxss",
]
mccabe.max-complexity = 18
pep8-naming.classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
]
pydocstyle.convention = "google"
pylint.max-args = 10

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/dxss/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false

[tool.tox]
legacy_tox_ini = """
[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
conda_deps =
    dolfinx06: fenics-dolfinx==0.6
    dolfinx07: fenics-dolfinx==0.7
    docs: fenics-dolfinx==0.7
conda_channels =
    conda-forge

[testenv:test-py{39,310}-dolfinx{06,07},test-py{311,312}-dolfinx07]
commands =
    pytest -s --cov --cov-report=xml
deps =
    pytest
    pytest-cov
    pytest-mock

[testenv:docs]
commands =
    sphinx-apidoc -o docs src/ -T
    sphinx-build -W -b html docs docs/_build/html
deps =
    sphinx<7
    pydata-sphinx-theme
    sphinx-autodoc-typehints

[tox]
envlist =
    test-py{39,310}-dolfinx{06,07}
    test-py{311,312}-dolfinx07
isolated_build = true
requires = tox-conda
"""
